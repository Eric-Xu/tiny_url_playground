<% provide(:title, 'About') %>
<h1>Techniques Used</h1>
<%= link_to '^', '#', id: 'back_to_top' %>
<article>
	<h2>Front End</h2>
	<p>
		<em>HTML5</em><br>
		tags and form validators
	</p>
	<p>ARIA landmark roles</p>
	<p>
		<em>Sass</em><br>
		and lot of other cool stuff.
	</p>
	<p>jQuery</p>
	<p>Coffeescript</p>
	<p>Ajax</p>
	<p>Modernizr</p>
	<p>Progressive enhancement - JS toggle example</p>
	<p></p>
</article>
<article>
	<h2>Back End</h2>
	<p>
		<em>Rails 4</em><br>
	</p>
	<p>
		<em>Routing constraints</em><br>
		are checks written around routes that will clean and validate information before even hitting a controller action. The key word here is before. Before this external data can touch behavior in your controllers, and subsequently your persistence layers, it already gets vetted. This opens up a lot of flexibility and security to our controllers, and can keep us from writing more boilerplate than we normally would.
	</p>
	<p>
		<em>Counter Cache Column</em><br>
	</p>
	<p>
		<em>Sortable Table Columns</em><br>
	</p>
	<p>
		<em>Will_Paginate gem</em><br>
	</p>
	<p></p>
</article>
<article>
	<h2>Testing</h2>
	<p>
		<em>RSpec</em><br>
		Requests, models, and helpers. Also RSpec custom matchers
	</p>
	<p>
		<em>Cucumber</em><br>
	</p>
	<p>
		<em>Capybara</em><br>
		Acceptance testing framework for web applications
	</p>
	<p>
		<em>FactoryGirl</em><br>
		defining factory sequences to generate a list of user objects
	</p>
	<p>
		<em>RSpec</em><br>
	</p>
	<p>
		<em>RSpec</em><br>
	</p>
	<p></p>
</article>
<article id='about_me'>
	<p>Welcome to LOL.ly and thank you for exploring my site.</p>
</article>